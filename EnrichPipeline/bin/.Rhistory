library(edgeR)
?rpkm
chisq.test(matrix(c(49,1098,66,1369),nr=2))
fisher.test(matrix(c(49,1098,66,1369),nr=2))
fisher.test(matrix(c(49,1049,66,1363),nr=2))
chisq.test(matrix(c(49,1049,66,1363),nr=2))
q('no')
library(GO.db)
?GO.db
q('no')
install.packages("C:/Users/ypch/Downloads/GO.db_2.10.1.zip", repos = NULL)
source("http://bioconductor.org/biocLite.R")
biocLite("GO.db")
install.packages("C:/Users/ypch/Downloads/Biobase_2.22.0.zip", repos = NULL)
library(Biobase)
?Biobase
source("http://bioconductor.org/biocLite.R")
library(GO.db)
?GO.db
install.packages("C:/Users/ypch/Downloads/GO.db_2.10.1.zip", repos = NULL)
library(GO.db)
##preparing the meta.data
bpchild <- as.list(GOBPCHILDREN)
bp.level3 <-
unique(as.character(unlist(bpchild[as.character(bpchild[["GO:0008150"]])])))
ccchild <- as.list(GOCCCHILDREN)
cc.level3 <-
unique(as.character(unlist(ccchild[as.character(ccchild[["GO:0005575"]])])))
mfchild <- as.list(GOMFCHILDREN)
mf.level3 <- mfchild[as.character(mfchild[["GO:0003674"]])]
naloc <- which(sapply(mf.level3,function(x) any(is.na(x))))
mf.level3[naloc] <- names(naloc)
mf.level3 <- unique(as.character(unlist(mf.level3)))
?GO.db
bp.aces <- as.list(GOBPANCESTOR)
cc.aces <- as.list(GOCCANCESTOR)
mf.aces <- as.list(GOMFANCESTOR)
bp.parent <- as.list(GOBPPARENTS)
cc.parent <- as.list(GOCCPARENTS)
mf.parent <- as.list(GOMFPARENTS)
all.parent <- c(bp.parent,cc.parent,mf.parent)
goterm <- as.list(GOTERM)
##GO level
goLev <- rep("a",length=length(goterm))
names(goLev) <- names(goterm)
Childs <- c("GO:0003674","GO:0008150","GO:0005575")
lev <- 1
all.child <- c(bpchild,ccchild,mfchild)
while(length(Childs)>=1){
loc <- match(Childs,names(goLev))
goLev[loc][goLev[loc] == "a"] <- lev
Childs <- unique(as.character(unlist(all.child[Childs])))
Childs <- Childs[! is.na(Childs)]
lev <- lev+1
}
goOnto <- lapply(names(goterm),function(x) c(Ontology(goterm[[x]]),
Term(goterm[[x]]),as.character(goLev[x])))
names(goOnto) <- names(goterm)
##initialize gene frequency at level3
genefreq.mf <- vector("numeric",length=length(mf.level3))
names(genefreq.mf) <- mf.level3
genefreq.bp <- vector("numeric",length=length(bp.level3))
names(genefreq.bp) <- bp.level3
genefreq.cc <- vector("numeric",length=length(cc.level3))
names(genefreq.cc) <- cc.level3
source("GOfreq.R")
source("sort.data.frame.R")
source("DiffGOs.R")
source("EnrichGO.R")
source("EnrichGOallLevl.R")
source("Fisher.Chi.test.R")
bp.off <- as.list(GOBPOFFSPRING)
cc.off <- as.list(GOCCOFFSPRING)
mf.off <- as.list(GOMFOFFSPRING)
all.off <- c(bp.off,cc.off,mf.off)
all.aces <- c(bp.aces,cc.aces,mf.aces)
save(all.child,all.aces,all.off,all.parent,bp.level3,cc.level3,mf.level3,bp.aces,cc.aces,mf.aces,goOnto,
genefreq.mf,genefreq.bp,genefreq.cc,bp.off,cc.off,mf.off,bpchild,ccchild,mfchild,Fisher.Chi.test,
sort.data.frame,DiffGOs,GOfreq,EnrichGO,EnrichGOallLevl,file="MetaGO_20130907.RData")
getwd()
setwd("d:/bin/Pipeline/EnrichPipeline/bin")
source("GOfreq.R")
source("sort.data.frame.R")
source("DiffGOs.R")
source("EnrichGO.R")
source("EnrichGOallLevl.R")
source("Fisher.Chi.test.R")
bp.off <- as.list(GOBPOFFSPRING)
cc.off <- as.list(GOCCOFFSPRING)
save(all.child,all.aces,all.off,all.parent,bp.level3,cc.level3,mf.level3,bp.aces,cc.aces,mf.aces,goOnto,
genefreq.mf,genefreq.bp,genefreq.cc,bp.off,cc.off,mf.off,bpchild,ccchild,mfchild,Fisher.Chi.test,
sort.data.frame,DiffGOs,GOfreq,EnrichGO,EnrichGOallLevl,file="MetaGO_20130907.RData")
